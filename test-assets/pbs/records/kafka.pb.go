// Code generated by protoc-gen-go. DO NOT EDIT.
// source: records/kafka.proto

package records

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KafkaSinkRecord struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Offset               int64    `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Partition            int32    `protobuf:"varint,6,opt,name=partition,proto3" json:"partition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KafkaSinkRecord) Reset()         { *m = KafkaSinkRecord{} }
func (m *KafkaSinkRecord) String() string { return proto.CompactTextString(m) }
func (*KafkaSinkRecord) ProtoMessage()    {}
func (*KafkaSinkRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_d05b8249ca05dcf4, []int{0}
}

func (m *KafkaSinkRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KafkaSinkRecord.Unmarshal(m, b)
}
func (m *KafkaSinkRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KafkaSinkRecord.Marshal(b, m, deterministic)
}
func (m *KafkaSinkRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KafkaSinkRecord.Merge(m, src)
}
func (m *KafkaSinkRecord) XXX_Size() int {
	return xxx_messageInfo_KafkaSinkRecord.Size(m)
}
func (m *KafkaSinkRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_KafkaSinkRecord.DiscardUnknown(m)
}

var xxx_messageInfo_KafkaSinkRecord proto.InternalMessageInfo

func (m *KafkaSinkRecord) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *KafkaSinkRecord) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KafkaSinkRecord) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KafkaSinkRecord) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *KafkaSinkRecord) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *KafkaSinkRecord) GetPartition() int32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func init() {
	proto.RegisterType((*KafkaSinkRecord)(nil), "records.KafkaSinkRecord")
}

func init() { proto.RegisterFile("records/kafka.proto", fileDescriptor_d05b8249ca05dcf4) }

var fileDescriptor_d05b8249ca05dcf4 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0x31, 0x4e, 0xc4, 0x30,
	0x10, 0x45, 0x65, 0x42, 0x82, 0xd6, 0x42, 0x02, 0x19, 0x04, 0x2e, 0x28, 0x22, 0xaa, 0x34, 0xd8,
	0x05, 0x9c, 0x80, 0x96, 0x02, 0xc9, 0x74, 0x74, 0xb6, 0x99, 0x10, 0x2b, 0x9b, 0xd8, 0xf2, 0x4c,
	0x56, 0xe2, 0x3c, 0x5c, 0x74, 0x15, 0x6f, 0xa4, 0xed, 0xfc, 0xde, 0xff, 0xbf, 0xf0, 0xf0, 0xbb,
	0x0c, 0x3e, 0xe6, 0x1f, 0xd4, 0xa3, 0xed, 0x47, 0xab, 0x52, 0x8e, 0x14, 0xc5, 0xd5, 0x26, 0x9f,
	0xff, 0x19, 0xbf, 0xf9, 0x58, 0x83, 0xaf, 0x30, 0x8f, 0xa6, 0x48, 0x71, 0xcf, 0x6b, 0x8a, 0x29,
	0x78, 0xc9, 0x5a, 0xd6, 0xed, 0xcc, 0x09, 0xc4, 0x2d, 0xaf, 0x46, 0xf8, 0x93, 0x17, 0x2d, 0xeb,
	0xae, 0xcd, 0xfa, 0x5c, 0x7b, 0x07, 0xbb, 0x5f, 0x40, 0x56, 0xc5, 0x9d, 0x40, 0x3c, 0xf1, 0x1d,
	0x85, 0x09, 0x90, 0xec, 0x94, 0xe4, 0x65, 0xcb, 0xba, 0xca, 0x9c, 0x85, 0x78, 0xe0, 0x4d, 0xec,
	0x7b, 0x04, 0x92, 0x75, 0x89, 0x36, 0x5a, 0x57, 0xc9, 0x66, 0x0a, 0x14, 0xe2, 0x2c, 0x9b, 0x96,
	0x75, 0xb5, 0x39, 0x8b, 0xf7, 0x4f, 0xfe, 0x88, 0x83, 0x72, 0x96, 0xfc, 0xa0, 0xe0, 0x00, 0x33,
	0xa1, 0xda, 0x3e, 0xf0, 0xfd, 0xf6, 0x1b, 0x68, 0x58, 0x9c, 0xf2, 0x71, 0xd2, 0xa5, 0xe0, 0x63,
	0x4e, 0x3a, 0xed, 0x97, 0xc9, 0x41, 0xd6, 0x04, 0x48, 0x2f, 0x16, 0x11, 0x08, 0x75, 0x72, 0xa8,
	0xb7, 0x95, 0x6b, 0xca, 0x19, 0x5e, 0x8f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x48, 0xf7, 0x0c, 0x26,
	0x1d, 0x01, 0x00, 0x00,
}
