// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Account_OnboardingState int32

const (
	Account_PENDING       Account_OnboardingState = 0
	Account_WELCOME       Account_OnboardingState = 1
	Account_DESTINATION   Account_OnboardingState = 2
	Account_INITIAL_EVENT Account_OnboardingState = 3
	Account_CLOSED        Account_OnboardingState = 4
)

var Account_OnboardingState_name = map[int32]string{
	0: "PENDING",
	1: "WELCOME",
	2: "DESTINATION",
	3: "INITIAL_EVENT",
	4: "CLOSED",
}

var Account_OnboardingState_value = map[string]int32{
	"PENDING":       0,
	"WELCOME":       1,
	"DESTINATION":   2,
	"INITIAL_EVENT": 3,
	"CLOSED":        4,
}

func (x Account_OnboardingState) String() string {
	return proto.EnumName(Account_OnboardingState_name, int32(x))
}

func (Account_OnboardingState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0, 0}
}

type Account_OnboardingStateStatus int32

const (
	Account_STATUS_UNSET Account_OnboardingStateStatus = 0
	Account_COMPLETE     Account_OnboardingStateStatus = 1
	Account_PROCESSING   Account_OnboardingStateStatus = 2
	Account_ERROR        Account_OnboardingStateStatus = 3
	Account_SKIPPED      Account_OnboardingStateStatus = 4
)

var Account_OnboardingStateStatus_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "COMPLETE",
	2: "PROCESSING",
	3: "ERROR",
	4: "SKIPPED",
}

var Account_OnboardingStateStatus_value = map[string]int32{
	"STATUS_UNSET": 0,
	"COMPLETE":     1,
	"PROCESSING":   2,
	"ERROR":        3,
	"SKIPPED":      4,
}

func (x Account_OnboardingStateStatus) String() string {
	return proto.EnumName(Account_OnboardingStateStatus_name, int32(x))
}

func (Account_OnboardingStateStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0, 1}
}

type Account struct {
	Id                            string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName                      string                        `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Email                         string                        `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	OnboardingState               Account_OnboardingState       `protobuf:"varint,4,opt,name=onboarding_state,json=onboardingState,proto3,enum=events.Account_OnboardingState" json:"onboarding_state,omitempty"`
	OnboardingStateStatus         Account_OnboardingStateStatus `protobuf:"varint,5,opt,name=onboarding_state_status,json=onboardingStateStatus,proto3,enum=events.Account_OnboardingStateStatus" json:"onboarding_state_status,omitempty"`
	BillingPlanId                 string                        `protobuf:"bytes,6,opt,name=billing_plan_id,json=billingPlanId,proto3" json:"billing_plan_id,omitempty"`
	BillingSkipCreateSubscription bool                          `protobuf:"varint,7,opt,name=billing_skip_create_subscription,json=billingSkipCreateSubscription,proto3" json:"billing_skip_create_subscription,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                      `json:"-"`
	XXX_unrecognized              []byte                        `json:"-"`
	XXX_sizecache                 int32                         `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetOnboardingState() Account_OnboardingState {
	if m != nil {
		return m.OnboardingState
	}
	return Account_PENDING
}

func (m *Account) GetOnboardingStateStatus() Account_OnboardingStateStatus {
	if m != nil {
		return m.OnboardingStateStatus
	}
	return Account_STATUS_UNSET
}

func (m *Account) GetBillingPlanId() string {
	if m != nil {
		return m.BillingPlanId
	}
	return ""
}

func (m *Account) GetBillingSkipCreateSubscription() bool {
	if m != nil {
		return m.BillingSkipCreateSubscription
	}
	return false
}

func init() {
	proto.RegisterEnum("events.Account_OnboardingState", Account_OnboardingState_name, Account_OnboardingState_value)
	proto.RegisterEnum("events.Account_OnboardingStateStatus", Account_OnboardingStateStatus_name, Account_OnboardingStateStatus_value)
	proto.RegisterType((*Account)(nil), "events.Account")
}

func init() { proto.RegisterFile("account.proto", fileDescriptor_8e28828dcb8d24f0) }

var fileDescriptor_8e28828dcb8d24f0 = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xef, 0x8a, 0xd3, 0x40,
	0x14, 0xc5, 0x37, 0xe9, 0xff, 0xbb, 0xdb, 0x76, 0x1c, 0x5c, 0x0c, 0x88, 0x58, 0x0a, 0x4a, 0x3f,
	0x48, 0x02, 0xfa, 0x04, 0x35, 0x1d, 0x96, 0x68, 0x37, 0x09, 0x99, 0xac, 0x82, 0x22, 0x61, 0xf2,
	0xc7, 0x76, 0xd8, 0x24, 0x13, 0x92, 0x89, 0x8f, 0xe4, 0x73, 0xca, 0x4c, 0xab, 0xe8, 0xb2, 0xe0,
	0x97, 0xc0, 0x3d, 0xf7, 0xc7, 0x39, 0xe7, 0x92, 0x81, 0x39, 0xcb, 0x32, 0xd1, 0xd7, 0xd2, 0x6e,
	0x5a, 0x21, 0x05, 0x1e, 0x17, 0x3f, 0x8a, 0x5a, 0x76, 0xeb, 0x9f, 0x43, 0x98, 0x6c, 0x4f, 0x1b,
	0xbc, 0x00, 0x93, 0xe7, 0x96, 0xb1, 0x32, 0x36, 0xb3, 0xc8, 0xe4, 0x39, 0x7e, 0x0e, 0xb3, 0xef,
	0x7d, 0x59, 0x26, 0x35, 0xab, 0x0a, 0xcb, 0xd4, 0xf2, 0x54, 0x09, 0x3e, 0xab, 0x0a, 0xfc, 0x14,
	0x46, 0x45, 0xc5, 0x78, 0x69, 0x0d, 0xf4, 0xe2, 0x34, 0xe0, 0x0f, 0x80, 0x44, 0x9d, 0x0a, 0xd6,
	0xe6, 0xbc, 0x3e, 0x24, 0x9d, 0x64, 0xb2, 0xb0, 0x86, 0x2b, 0x63, 0xb3, 0x78, 0xfb, 0xd2, 0x3e,
	0x25, 0xda, 0xe7, 0x34, 0x3b, 0xf8, 0xc3, 0x51, 0x85, 0x45, 0x4b, 0xf1, 0xaf, 0x80, 0xbf, 0xc1,
	0xb3, 0x87, 0x5e, 0xfa, 0xdb, 0x77, 0xd6, 0x48, 0x5b, 0xbe, 0xfa, 0x8f, 0x25, 0xd5, 0x70, 0x74,
	0x2d, 0x1e, 0x93, 0xf1, 0x6b, 0x58, 0xa6, 0xbc, 0x2c, 0x95, 0x77, 0x53, 0xb2, 0x3a, 0xe1, 0xb9,
	0x35, 0xd6, 0xa7, 0xcc, 0xcf, 0x72, 0x58, 0xb2, 0xda, 0xcb, 0xf1, 0x0d, 0xac, 0x7e, 0x73, 0xdd,
	0x3d, 0x6f, 0x92, 0xac, 0x2d, 0x74, 0x93, 0x3e, 0xed, 0xb2, 0x96, 0x37, 0x92, 0x8b, 0xda, 0x9a,
	0xac, 0x8c, 0xcd, 0x34, 0x7a, 0x71, 0xe6, 0xe8, 0x3d, 0x6f, 0x5c, 0x4d, 0xd1, 0xbf, 0xa0, 0xf5,
	0x57, 0x58, 0x3e, 0x28, 0x88, 0x2f, 0x61, 0x12, 0x12, 0x7f, 0xe7, 0xf9, 0x37, 0xe8, 0x42, 0x0d,
	0x9f, 0xc9, 0xde, 0x0d, 0x6e, 0x09, 0x32, 0xf0, 0x12, 0x2e, 0x77, 0x84, 0xc6, 0x9e, 0xbf, 0x8d,
	0xbd, 0xc0, 0x47, 0x26, 0x7e, 0x02, 0x73, 0xcf, 0xf7, 0x62, 0x6f, 0xbb, 0x4f, 0xc8, 0x27, 0xe2,
	0xc7, 0x68, 0x80, 0x01, 0xc6, 0xee, 0x3e, 0xa0, 0x64, 0x87, 0x86, 0xeb, 0x04, 0xae, 0x1f, 0xbd,
	0x1e, 0x23, 0xb8, 0xa2, 0xf1, 0x36, 0xbe, 0xa3, 0xc9, 0x9d, 0x4f, 0x49, 0x8c, 0x2e, 0xf0, 0x15,
	0x4c, 0xdd, 0xe0, 0x36, 0xdc, 0x93, 0x58, 0x05, 0x2d, 0x00, 0xc2, 0x28, 0x70, 0x09, 0xa5, 0xaa,
	0x85, 0x89, 0x67, 0x30, 0x22, 0x51, 0x14, 0x44, 0x68, 0xa0, 0x0a, 0xd1, 0x8f, 0x5e, 0x18, 0xaa,
	0x80, 0xf7, 0xf6, 0x97, 0x37, 0x07, 0x2e, 0x8f, 0x7d, 0x6a, 0x67, 0xa2, 0x72, 0x52, 0x26, 0xb3,
	0x63, 0x26, 0xda, 0xc6, 0xe9, 0xb2, 0x63, 0x51, 0xb1, 0xce, 0x49, 0x7b, 0x5e, 0xe6, 0xce, 0x41,
	0x38, 0xa7, 0x7f, 0x92, 0x8e, 0xf5, 0x3b, 0x7b, 0xf7, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xaf, 0x66,
	0xf3, 0x2b, 0x78, 0x02, 0x00, 0x00,
}
